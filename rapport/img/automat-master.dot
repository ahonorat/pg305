digraph coherence {

graph [fontname = "times"];
node [fontname = "times"];
edge [fontname = "times"];

    node
        [shape=Mrecord width=1.5];

    subgraph process_automaton {

        label="Process";

        //
        // States (Nodes)
        //

        "Process::Normal"
            [root="true" color="green" label="{Etat normal}"];

        "Process::Terminaison"
            [label="{Terminaison}"];

        "Process::Terminé"
            [color="red" label="{Terminé}"];

        //
        // Transitions (Edges)
        //

        "Process::Normal" -> "Process::Normal"
            [label=<Réception d'une demande de travail<BR/><FONT color="blue">Envoi d'une tâche au demandeur</FONT>>];

        "Process::Normal" -> "Process::Terminaison"
            [label=<Réception d'un message de terminaison<BR/><FONT color="blue"><BR/>*<u>Si mot de passe trouvé</u> : Envoie un message de terminaison aux slaves<BR/>*<u>Sinon</u> : Attend que les autres processus le contacte.</FONT>>];

        "Process::Terminaison" -> "Process::Terminaison"
            [label=<Réception d'une demande de travail<BR/><FONT color="blue">Envoi d'une tâche au demandeur</FONT>>];

        "Process::Terminaison" -> "Process::Terminé"
            [label=<Tous les slaves ont terminé<BR/><FONT color="blue">Affiche le mot de passe s'il a été trouvé et termine.</FONT>>];    
    }

}
